[{"C:\\reacttutorial\\reactproject\\src\\index.js":"1","C:\\reacttutorial\\reactproject\\src\\App.js":"2","C:\\reacttutorial\\reactproject\\src\\reportWebVitals.js":"3","C:\\reacttutorial\\reactproject\\src\\components\\AddUser.js":"4","C:\\reacttutorial\\reactproject\\src\\components\\UserDashboard.js":"5"},{"size":440,"mtime":1657177541935,"results":"6","hashOfConfig":"7"},{"size":268,"mtime":1657177538958,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1656928954274,"results":"9","hashOfConfig":"7"},{"size":6873,"mtime":1657177524415,"results":"10","hashOfConfig":"7"},{"size":210,"mtime":1657177536182,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"1d0jbuw",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":5,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\reacttutorial\\reactproject\\src\\index.js",["31"],[],"import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport App from './App';\nimport bootstrap from \"bootstrap\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\nreportWebVitals();","C:\\reacttutorial\\reactproject\\src\\App.js",["32","33"],[],"import logo from './logo.svg';\nimport './App.css';\nimport AddUser from './components/AddUser';\nimport UserDashboard from './components/UserDashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AddUser/>\n      \n    </div>\n  );\n}\n\nexport default App;","C:\\reacttutorial\\reactproject\\src\\reportWebVitals.js",[],[],[],"C:\\reacttutorial\\reactproject\\src\\components\\AddUser.js",["34","35","36","37","38","39","40"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./AddUser.css\";\r\nimport UserDashboard from \"./UserDashboard\";\r\nconst AddUser = () => {\r\n  const [data, setData] = useState([{}]);\r\n    useEffect(() => {\r\n        getUser();\r\n        console.log(data);\r\n    }, []);\r\n    const getUser = async() => {\r\n        await axios\r\n        .get(\"http://localhost:4000/users\")\r\n        .then((res) => setData(res.data));\r\n    };\r\n  \r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n   });\r\n\r\n   const [updateData, setUpdateData] = useState({\r\n    name: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    id: \"\",\r\n});\r\n   \r\n    const handleFormSubmit = async (e) => {\r\n      let response = await axios.post(\"http://localhost:4000/users\", formData);\r\n\r\nif (response) {\r\n    alert(\"Congratulations!!  You have successfully registered\");\r\n}else {\r\n    alert(\"something went wrong please try again\");\r\n}\r\n\r\n   setFormData({\r\n        name:\"\",\r\n        mobile:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n     });\r\n     getUser();\r\n    };\r\n    const handleDelete = async(id) => {\r\n        await axios\r\n        .delete(\"http://localhost:4000/users/\" + id)\r\n        .then((res) => alert(\"deleted success\"));\r\n        getUser();\r\n  };\r\n    const handleUpdate = async () => {\r\n      await axios\r\n        .put(`http://localhost:4000/users/${updateData.id}`, updateData)\r\n        .then((res) => { alert(\"User updated Successfully\");\r\n        getUser();\r\n        });\r\n    };\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div>\r\n          <h1>Registration Form</h1>\r\n            </div>\r\n<div class=\"mb-3\">\r\n  <label \r\n  for=\"exampleFormControlInput1\" \r\n  class=\"form-label\">\r\n    Full Name\r\n  </label>\r\n  <input \r\n  type=\"text\" \r\n  class=\"form-control\" \r\n  id=\"exampleFormControlInput1\"\r\n  value={formData.name}\r\n  onChange={(e)=> setFormData({ ...\r\n    formData, name: e.target.value })}\r\n  />\r\n</div>\r\n<div class=\"mb-3\">\r\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">\r\n    Mobile No.\r\n  </label>\r\n  <input \r\n  type=\"text\" \r\n  class=\"form-control\" \r\n  id=\"exampleFormControlInput1\" \r\n  value={formData.mobile}\r\n  onChange={(e)=> setFormData({ ...\r\n    formData, mobile: e.target.value })}\r\n  />\r\n</div>\r\n<div class=\"mb-3\">\r\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">\r\n    Email address\r\n  </label>\r\n  <input \r\n  type=\"email\" \r\n  class=\"form-control\" \r\n  id=\"exampleFormControlInput1\" \r\n  value={formData.email}\r\n  onChange={(e)=> setFormData({ ...\r\n    formData, email: e.target.value })}\r\n  />\r\n</div>\r\n<div class=\"mb-3\">\r\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">\r\n    Passsword\r\n  </label>\r\n  <input \r\n  type=\"password\" \r\n  class=\"form-control\" \r\n  id=\"exampleFormControlInput1\" \r\n  value={formData.password}\r\n  onChange={(e)=> setFormData({ ...\r\n    formData, password: e.target.value })}\r\n  />\r\n</div>\r\n<div class=\"mb-3\">\r\n    <button className=\"btn btn-success\"\r\n    onClick={handleFormSubmit}>\r\n      Submit\r\n    </button>\r\n   </div>\r\n   </div>{\" \"}\r\n   <div>\r\n    <h1>User Dashboard</h1>\r\n    <table class=\"table table-dark table-hover\">\r\n    <thead>\r\n    <tr>\r\n      <th scope=\"col\">ID</th>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Mobile</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    { data && \r\n    data.map((user) => (\r\n                  <tr>\r\n            <th scope=\"row\">{user.id}</th>\r\n            <td>{user.name}</td>\r\n            <td>{user.mobile}</td>\r\n            <td>{user.email}</td>\r\n            <td \r\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n                  <button className=\"btn \r\n                  btn-info\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\r\n                  onClick={()=>setUpdateData({\r\n                    name: user.name,\r\n                    email: user.email,\r\n                    mobile: user.mobile,\r\n                    password: user.password,\r\n                    id: user.id,\r\n                  })\r\n                }\r\n                  >\r\n                    Edit\r\n                    </button>    \r\n\r\n                  <button\r\n                   className=\"btn btn-danger\" \r\n                  onClick={() => handleDelete(user.id)}\r\n                  >\r\n                    Delete\r\n                    </button>   \r\n               </td>\r\n          </tr>\r\n   ))}\r\n    </tbody>\r\n   </table>\r\n  </div>\r\n  <div class=\"modal fade\" \r\n  id=\"exampleModal\" tabindex=\"-1\" \r\n  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">\r\n          Update user\r\n          </h5>\r\n        <button type=\"button\" \r\n        class=\"btn-close\" \r\n        data-bs-dismiss=\"modal\" \r\n        aria-label=\"Close\">\r\n\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n      <div class=\"mb-3\">\r\n  <label \r\n  for=\"exampleFormControlInput1\" \r\n  class=\"form-label\">\r\n    Full Name\r\n  </label>\r\n  <input \r\n  type=\"text\" \r\n  class=\"form-control\" \r\n  id=\"exampleFormControlInput1\"\r\n  value={updateData.name}\r\n  onChange={(e) => \r\n    setUpdateData({ ...updateData, name: e.target.value })\r\n  }\r\n  />\r\n</div>\r\n<div class=\"mb-3\">\r\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">\r\n    Mobile No.\r\n  </label>\r\n  <input \r\n  type=\"text\" \r\n  class=\"form-control\" \r\n  id=\"exampleFormControlInput1\" \r\n  value={updateData.mobile}\r\n  onChange={(e)=> setUpdateData({ ...\r\n    updateData, mobile: e.target.value })}\r\n  />\r\n</div>\r\n<div class=\"mb-3\">\r\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">\r\n    Email address\r\n  </label>\r\n  <input \r\n  type=\"email\" \r\n  class=\"form-control\" \r\n  id=\"exampleFormControlInput1\" \r\n  value={updateData.email}\r\n  onChange={(e) => \r\n    setUpdateData({ ...updateData, email: e.target.value })\r\n  }\r\n  />\r\n</div>\r\n<div class=\"mb-3\">\r\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">\r\n    Passsword\r\n  </label>\r\n  <input \r\n  type=\"password\" \r\n  class=\"form-control\" \r\n  id=\"exampleFormControlInput1\" \r\n  value={updateData.password}\r\n  onChange={(e) => \r\n    setUpdateData({ ...updateData, password: e.target.value })\r\n  }\r\n  />\r\n</div>  \r\n</div>\r\n  <div class=\"modal-footer\">\r\n    <button \r\n        type=\"button\" \r\n        class=\"btn btn-secondary\" \r\n        data-bs-dismiss=\"modal\">\r\n          Close\r\n          </button>\r\n        <button \r\n        type=\"button\" \r\n        class=\"btn btn-primary\" \r\n        data-bs-dismiss=\"modal\"\r\n        onClick={()=>handleUpdate()}>\r\n          Update User\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n);\r\n};\r\nexport default AddUser;","C:\\reacttutorial\\reactproject\\src\\components\\UserDashboard.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"46","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":21},{"ruleId":"41","severity":1,"message":"46","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":10,"column":8,"nodeType":"49","endLine":10,"endColumn":10,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":79,"column":36,"nodeType":"53","messageId":"54","endLine":80,"endColumn":5,"fix":"55"},{"ruleId":"51","severity":1,"message":"52","line":92,"column":36,"nodeType":"53","messageId":"54","endLine":93,"endColumn":5,"fix":"56"},{"ruleId":"51","severity":1,"message":"52","line":105,"column":36,"nodeType":"53","messageId":"54","endLine":106,"endColumn":5,"fix":"57"},{"ruleId":"51","severity":1,"message":"52","line":118,"column":36,"nodeType":"53","messageId":"54","endLine":119,"endColumn":5,"fix":"58"},{"ruleId":"51","severity":1,"message":"52","line":220,"column":38,"nodeType":"53","messageId":"54","endLine":221,"endColumn":5,"fix":"59"},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'UserDashboard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["60"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"61","text":"62"},{"range":"63","text":"62"},{"range":"64","text":"62"},{"range":"65","text":"62"},{"range":"66","text":"62"},{"desc":"67","fix":"68"},[1996,2002],"",[2309,2315],[2627,2633],[2946,2952],[5693,5699],"Update the dependencies array to be: [data]",{"range":"69","text":"70"},[298,300],"[data]"]